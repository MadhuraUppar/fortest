name: Stages Creation Workflow
on:
  workflow_dispatch:
    inputs:
        environment:
          required: true
          type: choice
          description: "environment"
          options:
            - "Dev"
            - "QA"
            - "PROD"

  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read
env:
  MY_GLOBAL_VARIABLE: 'oldvalue'
jobs:
  changed_files_list:
    runs-on: ubuntu-latest
    outputs:
      changedfiles: ${{ steps.set-changed-files.outputs.changedfiles }}
    if: github.event_name == 'pull_request'
    steps:
      - name: Clone Repo
        uses: actions/checkout@v3

      - name: Get main branch
        run: git fetch --no-tags --prune --depth=1 origin +refs/heads/${{ github.event.pull_request.base.ref }}:refs/remotes/origin/${{ github.event.pull_request.base.ref }}

      - name: Get list of changed files in a specific directory
        id: set-changed-files
        run: echo "changedfiles=$(git diff --name-only --diff-filter=ACMRT origin/${{ github.event.pull_request.base.ref }} HEAD | grep '^snowflake_stages_automation' | uniq)" >> $GITHUB_OUTPUT

      - name: Print files to be validated in first_workflow
        run: echo "${{steps.set-changed-files.outputs.changedfiles}}"
      
      - name: print old global variable
        if: env.changedfiles == ''
        run: echo "variable is $MY_GLOBAL_VARIABLE"

      - name: Change env variable
        run: echo "MY_GLOBAL_VARIABLE=newvalue" >> $GITHUB_ENV

      - name: print new global variable
        run: echo "variable is $MY_GLOBAL_VARIABLE"
      
      - name: checking variable changed files
        run: echo "changed files variable value is $changedfiles"
      

  dev_stages_workflow:
    runs-on: windows-latest 
    needs: changed_files_list 
    steps:
      - name: Print files to be validated in dev_stage
        if: ${{ env.MY_GLOBAL_VARIABLE != 'oldvalue' && needs.changed_files_list.result != 'skipped'}}
        run: echo "variable is ${{ env.MY_GLOBAL_VARIABLE }}"

    
    
      
